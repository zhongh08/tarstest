// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.haowei.tarstest.tars.testapp;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class FindBillListReq {

	@TarsStructProperty(order = 0, isRequire = true)
	public int serviceType = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public int uid = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public PageUtils page = null;

	public int getServiceType() {
		return serviceType;
	}

	public void setServiceType(int serviceType) {
		this.serviceType = serviceType;
	}

	public int getUid() {
		return uid;
	}

	public void setUid(int uid) {
		this.uid = uid;
	}

	public PageUtils getPage() {
		return page;
	}

	public void setPage(PageUtils page) {
		this.page = page;
	}

	public FindBillListReq() {
	}

	public FindBillListReq(int serviceType, int uid, PageUtils page) {
		this.serviceType = serviceType;
		this.uid = uid;
		this.page = page;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(serviceType);
		result = prime * result + TarsUtil.hashCode(uid);
		result = prime * result + TarsUtil.hashCode(page);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FindBillListReq)) {
			return false;
		}
		FindBillListReq other = (FindBillListReq) obj;
		return (
			TarsUtil.equals(serviceType, other.serviceType) &&
			TarsUtil.equals(uid, other.uid) &&
			TarsUtil.equals(page, other.page) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(serviceType, 0);
		_os.write(uid, 1);
		if (null != page) {
			_os.write(page, 2);
		}
	}

	static PageUtils cache_page;
	static { 
		cache_page = new PageUtils();
	}

	public void readFrom(TarsInputStream _is) {
		this.serviceType = _is.read(serviceType, 0, true);
		this.uid = _is.read(uid, 1, true);
		this.page = (PageUtils) _is.read(cache_page, 2, false);
	}

}
