// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.haowei.tarstest.tars.testapp;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class RspHeader {

	@TarsStructProperty(order = 0, isRequire = true)
	public int iRequestID = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public int iRet = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public String sResultDesc = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public long iUniqueID = 0L;
	@TarsStructProperty(order = 4, isRequire = true)
	public int iInterValMs = 0;

	public int getIRequestID() {
		return iRequestID;
	}

	public void setIRequestID(int iRequestID) {
		this.iRequestID = iRequestID;
	}

	public int getIRet() {
		return iRet;
	}

	public void setIRet(int iRet) {
		this.iRet = iRet;
	}

	public String getSResultDesc() {
		return sResultDesc;
	}

	public void setSResultDesc(String sResultDesc) {
		this.sResultDesc = sResultDesc;
	}

	public long getIUniqueID() {
		return iUniqueID;
	}

	public void setIUniqueID(long iUniqueID) {
		this.iUniqueID = iUniqueID;
	}

	public int getIInterValMs() {
		return iInterValMs;
	}

	public void setIInterValMs(int iInterValMs) {
		this.iInterValMs = iInterValMs;
	}

	public RspHeader() {
	}

	public RspHeader(int iRequestID, int iRet, String sResultDesc, long iUniqueID, int iInterValMs) {
		this.iRequestID = iRequestID;
		this.iRet = iRet;
		this.sResultDesc = sResultDesc;
		this.iUniqueID = iUniqueID;
		this.iInterValMs = iInterValMs;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iRequestID);
		result = prime * result + TarsUtil.hashCode(iRet);
		result = prime * result + TarsUtil.hashCode(sResultDesc);
		result = prime * result + TarsUtil.hashCode(iUniqueID);
		result = prime * result + TarsUtil.hashCode(iInterValMs);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RspHeader)) {
			return false;
		}
		RspHeader other = (RspHeader) obj;
		return (
			TarsUtil.equals(iRequestID, other.iRequestID) &&
			TarsUtil.equals(iRet, other.iRet) &&
			TarsUtil.equals(sResultDesc, other.sResultDesc) &&
			TarsUtil.equals(iUniqueID, other.iUniqueID) &&
			TarsUtil.equals(iInterValMs, other.iInterValMs) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iRequestID, 0);
		_os.write(iRet, 1);
		_os.write(sResultDesc, 2);
		_os.write(iUniqueID, 3);
		_os.write(iInterValMs, 4);
	}


	public void readFrom(TarsInputStream _is) {
		this.iRequestID = _is.read(iRequestID, 0, true);
		this.iRet = _is.read(iRet, 1, true);
		this.sResultDesc = _is.readString(2, true);
		this.iUniqueID = _is.read(iUniqueID, 3, true);
		this.iInterValMs = _is.read(iInterValMs, 4, true);
	}

}
